/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing MediaResponseApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MediaResponseApiTests
    {
        private MediaResponseApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MediaResponseApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MediaResponseApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MediaResponseApi
            //Assert.IsInstanceOfType(typeof(MediaResponseApi), instance, "instance is a MediaResponseApi");
        }

        
        /// <summary>
        /// Test CreateMediaResponse
        /// </summary>
        [Test]
        public void CreateMediaResponseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewMediaResponseRequest model = null;
            //var response = instance.CreateMediaResponse(model);
            //Assert.IsInstanceOf<MediaResponseModel> (response, "response is MediaResponseModel");
        }
        
        /// <summary>
        /// Test CreateMediaResponseContainer
        /// </summary>
        [Test]
        public void CreateMediaResponseContainerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewMediaResponseContainerRequest model = null;
            //var response = instance.CreateMediaResponseContainer(model);
            //Assert.IsInstanceOf<MediaResponseContainerModel> (response, "response is MediaResponseContainerModel");
        }
        
        /// <summary>
        /// Test CreateMediaResponseContainer_0
        /// </summary>
        [Test]
        public void CreateMediaResponseContainer_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewBulkMediaResponseContainerRequest model = null;
            //var response = instance.CreateMediaResponseContainer_0(model);
            //Assert.IsInstanceOf<MediaResponseContainerModel> (response, "response is MediaResponseContainerModel");
        }
        
        /// <summary>
        /// Test CreateResponseTemplateType
        /// </summary>
        [Test]
        public void CreateResponseTemplateTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewResponseTemplateTypeRequest model = null;
            //var response = instance.CreateResponseTemplateType(model);
            //Assert.IsInstanceOf<ResponseTemplateTypeModel> (response, "response is ResponseTemplateTypeModel");
        }
        
        /// <summary>
        /// Test DeleteMediaResponse
        /// </summary>
        [Test]
        public void DeleteMediaResponseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mediaResponseId = null;
            //var response = instance.DeleteMediaResponse(mediaResponseId);
            //Assert.IsInstanceOf<MediaResponseModel> (response, "response is MediaResponseModel");
        }
        
        /// <summary>
        /// Test DeleteMediaResponseContainer
        /// </summary>
        [Test]
        public void DeleteMediaResponseContainerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string containerId = null;
            //var response = instance.DeleteMediaResponseContainer(containerId);
            //Assert.IsInstanceOf<MediaResponseContainerModel> (response, "response is MediaResponseContainerModel");
        }
        
        /// <summary>
        /// Test DeleteResponseTemplate
        /// </summary>
        [Test]
        public void DeleteResponseTemplateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //string responseTemplateId = null;
            //var response = instance.DeleteResponseTemplate(templateId, responseTemplateId);
            //Assert.IsInstanceOf<ResponseTemplateTypeModel> (response, "response is ResponseTemplateTypeModel");
        }
        
        /// <summary>
        /// Test GetAllResponseTemplates
        /// </summary>
        [Test]
        public void GetAllResponseTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllResponseTemplates();
            //Assert.IsInstanceOf<List<ResponseTemplateTypeModel>> (response, "response is List<ResponseTemplateTypeModel>");
        }
        
        /// <summary>
        /// Test GetEnabledResponseTemplates
        /// </summary>
        [Test]
        public void GetEnabledResponseTemplatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetEnabledResponseTemplates();
            //Assert.IsInstanceOf<List<ResponseTemplateTypeModel>> (response, "response is List<ResponseTemplateTypeModel>");
        }
        
        /// <summary>
        /// Test GetResponseContainerById
        /// </summary>
        [Test]
        public void GetResponseContainerByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string containerId = null;
            //var response = instance.GetResponseContainerById(containerId);
            //Assert.IsInstanceOf<MediaResponseContainerModel> (response, "response is MediaResponseContainerModel");
        }
        
        /// <summary>
        /// Test GetResponseContainersForApp
        /// </summary>
        [Test]
        public void GetResponseContainersForAppTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //var response = instance.GetResponseContainersForApp(applicationId);
            //Assert.IsInstanceOf<List<MediaResponseContainerModel>> (response, "response is List<MediaResponseContainerModel>");
        }
        
        /// <summary>
        /// Test GetResponseTemplateById
        /// </summary>
        [Test]
        public void GetResponseTemplateByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string responseTemplateId = null;
            //var response = instance.GetResponseTemplateById(responseTemplateId);
            //Assert.IsInstanceOf<ResponseTemplateTypeModel> (response, "response is ResponseTemplateTypeModel");
        }
        
        /// <summary>
        /// Test GetResponseTemplatesByAssistant
        /// </summary>
        [Test]
        public void GetResponseTemplatesByAssistantTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string assistant = null;
            //var response = instance.GetResponseTemplatesByAssistant(assistant);
            //Assert.IsInstanceOf<List<ResponseTemplateTypeModel>> (response, "response is List<ResponseTemplateTypeModel>");
        }
        
        /// <summary>
        /// Test GetResponseTemplatesByDeviceTarget
        /// </summary>
        [Test]
        public void GetResponseTemplatesByDeviceTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string deviceTargetId = null;
            //var response = instance.GetResponseTemplatesByDeviceTarget(deviceTargetId);
            //Assert.IsInstanceOf<List<ResponseTemplateTypeModel>> (response, "response is List<ResponseTemplateTypeModel>");
        }
        
        /// <summary>
        /// Test UpdateMediaResponse
        /// </summary>
        [Test]
        public void UpdateMediaResponseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string responseId = null;
            //UpdateMediaResponseRequest model = null;
            //var response = instance.UpdateMediaResponse(responseId, model);
            //Assert.IsInstanceOf<MediaResponseModel> (response, "response is MediaResponseModel");
        }
        
        /// <summary>
        /// Test UpdateMediaResponseContainer
        /// </summary>
        [Test]
        public void UpdateMediaResponseContainerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string containerId = null;
            //UpdateMediaResponseContainerRequest model = null;
            //var response = instance.UpdateMediaResponseContainer(containerId, model);
            //Assert.IsInstanceOf<MediaResponseContainerModel> (response, "response is MediaResponseContainerModel");
        }
        
        /// <summary>
        /// Test UpdateMediaResponseContainer_0
        /// </summary>
        [Test]
        public void UpdateMediaResponseContainer_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string containerId = null;
            //UpdateBulkMediaResponseContainerRequest model = null;
            //var response = instance.UpdateMediaResponseContainer_0(containerId, model);
            //Assert.IsInstanceOf<MediaResponseContainerModel> (response, "response is MediaResponseContainerModel");
        }
        
        /// <summary>
        /// Test UpdateResponseTemplateType
        /// </summary>
        [Test]
        public void UpdateResponseTemplateTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string templateId = null;
            //UpdateResponseTemplateTypeRequest model = null;
            //var response = instance.UpdateResponseTemplateType(templateId, model);
            //Assert.IsInstanceOf<ResponseTemplateTypeModel> (response, "response is ResponseTemplateTypeModel");
        }
        
    }

}
