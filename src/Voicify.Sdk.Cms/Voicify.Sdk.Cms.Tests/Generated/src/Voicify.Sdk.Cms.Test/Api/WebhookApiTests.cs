/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing WebhookApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WebhookApiTests
    {
        private WebhookApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WebhookApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WebhookApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WebhookApi
            //Assert.IsInstanceOfType(typeof(WebhookApi), instance, "instance is a WebhookApi");
        }

        
        /// <summary>
        /// Test AddWebhookParameter
        /// </summary>
        [Test]
        public void AddWebhookParameterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //NewWebhookParameterRequest model = null;
            //var response = instance.AddWebhookParameter(webhookId, model);
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        
        /// <summary>
        /// Test CreateWebhook
        /// </summary>
        [Test]
        public void CreateWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //NewWebhookRequest model = null;
            //var response = instance.CreateWebhook(organizationId, model);
            //Assert.IsInstanceOf<WebhookModel> (response, "response is WebhookModel");
        }
        
        /// <summary>
        /// Test GetOrganizationWebhooks
        /// </summary>
        [Test]
        public void GetOrganizationWebhooksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //var response = instance.GetOrganizationWebhooks(organizationId);
            //Assert.IsInstanceOf<List<WebhookModel>> (response, "response is List<WebhookModel>");
        }
        
        /// <summary>
        /// Test GetWebhookTypes
        /// </summary>
        [Test]
        public void GetWebhookTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetWebhookTypes();
            //Assert.IsInstanceOf<List<WebhookTypeModel>> (response, "response is List<WebhookTypeModel>");
        }
        
        /// <summary>
        /// Test RemoveWebhook
        /// </summary>
        [Test]
        public void RemoveWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //var response = instance.RemoveWebhook(webhookId);
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        
        /// <summary>
        /// Test UpdateWebhook
        /// </summary>
        [Test]
        public void UpdateWebhookTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string webhookId = null;
            //UpdateWebhookRequest model = null;
            //var response = instance.UpdateWebhook(webhookId, model);
            //Assert.IsInstanceOf<WebhookModel> (response, "response is WebhookModel");
        }
        
    }

}
