/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing ModuleApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ModuleApiTests
    {
        private ModuleApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ModuleApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ModuleApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ModuleApi
            //Assert.IsInstanceOfType(typeof(ModuleApi), instance, "instance is a ModuleApi");
        }

        
        /// <summary>
        /// Test AddCustomModulesToApplication
        /// </summary>
        [Test]
        public void AddCustomModulesToApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //List<NewModuleRequest> models = null;
            //instance.AddCustomModulesToApplication(applicationId, models);
            
        }
        
        /// <summary>
        /// Test AddFeatureToGeneralModule
        /// </summary>
        [Test]
        public void AddFeatureToGeneralModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //AddFeatureToModuleRequest model = null;
            //instance.AddFeatureToGeneralModule(applicationId, model);
            
        }
        
        /// <summary>
        /// Test AddFeatureToModule
        /// </summary>
        [Test]
        public void AddFeatureToModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationModuleId = null;
            //AddFeatureToModuleRequest model = null;
            //instance.AddFeatureToModule(applicationModuleId, model);
            
        }
        
        /// <summary>
        /// Test AddModuleToApplication
        /// </summary>
        [Test]
        public void AddModuleToApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //AddModuleToApplicationRequest model = null;
            //instance.AddModuleToApplication(applicationId, model);
            
        }
        
        /// <summary>
        /// Test ChangeApplicationModuleOrder
        /// </summary>
        [Test]
        public void ChangeApplicationModuleOrderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //List<string> applicationModuleIds = null;
            //instance.ChangeApplicationModuleOrder(applicationId, applicationModuleIds);
            
        }
        
        /// <summary>
        /// Test CreateCustomModule
        /// </summary>
        [Test]
        public void CreateCustomModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //NewModuleRequest model = null;
            //instance.CreateCustomModule(applicationId, model);
            
        }
        
        /// <summary>
        /// Test DisableApplicationModule
        /// </summary>
        [Test]
        public void DisableApplicationModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationModuleId = null;
            //instance.DisableApplicationModule(applicationModuleId);
            
        }
        
        /// <summary>
        /// Test GetModulesForApplication
        /// </summary>
        [Test]
        public void GetModulesForApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //instance.GetModulesForApplication(applicationId);
            
        }
        
        /// <summary>
        /// Test GetSystemModules
        /// </summary>
        [Test]
        public void GetSystemModulesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.GetSystemModules();
            
        }
        
        /// <summary>
        /// Test UpdateApplicationModule
        /// </summary>
        [Test]
        public void UpdateApplicationModuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationModuleId = null;
            //UpdateApplicationModuleRequest model = null;
            //instance.UpdateApplicationModule(applicationModuleId, model);
            
        }
        
    }

}
