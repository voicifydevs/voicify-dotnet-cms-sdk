/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing InteractionModelApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class InteractionModelApiTests
    {
        private InteractionModelApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new InteractionModelApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of InteractionModelApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' InteractionModelApi
            //Assert.IsInstanceOfType(typeof(InteractionModelApi), instance, "instance is a InteractionModelApi");
        }

        
        /// <summary>
        /// Test GetBaseInteractionModel
        /// </summary>
        [Test]
        public void GetBaseInteractionModelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetBaseInteractionModel();
            //Assert.IsInstanceOf<InteractionModel> (response, "response is InteractionModel");
        }
        
        /// <summary>
        /// Test GetInteractionModelForApplication
        /// </summary>
        [Test]
        public void GetInteractionModelForApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string locale = null;
            //var response = instance.GetInteractionModelForApplication(applicationId, locale);
            //Assert.IsInstanceOf<InteractionModel> (response, "response is InteractionModel");
        }
        
        /// <summary>
        /// Test GetInteractionModelStatus
        /// </summary>
        [Test]
        public void GetInteractionModelStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //var response = instance.GetInteractionModelStatus(applicationId);
            //Assert.IsInstanceOf<InteractionModelStatus> (response, "response is InteractionModelStatus");
        }
        
        /// <summary>
        /// Test UpdateInteractionModelForApplication
        /// </summary>
        [Test]
        public void UpdateInteractionModelForApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string locale = null;
            //InteractionModelUpdate update = null;
            //var response = instance.UpdateInteractionModelForApplication(applicationId, locale, update);
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        
    }

}
