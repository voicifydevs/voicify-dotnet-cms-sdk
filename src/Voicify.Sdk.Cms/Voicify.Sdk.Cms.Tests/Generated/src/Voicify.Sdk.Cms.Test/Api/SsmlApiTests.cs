/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing SsmlApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SsmlApiTests
    {
        private SsmlApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SsmlApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SsmlApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SsmlApi
            //Assert.IsInstanceOfType(typeof(SsmlApi), instance, "instance is a SsmlApi");
        }

        
        /// <summary>
        /// Test Build
        /// </summary>
        [Test]
        public void BuildTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SsmlElement element = null;
            //var response = instance.Build(element);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test Parse
        /// </summary>
        [Test]
        public void ParseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SsmlRequest request = null;
            //var response = instance.Parse(request);
            //Assert.IsInstanceOf<SsmlElement> (response, "response is SsmlElement");
        }
        
        /// <summary>
        /// Test Segment
        /// </summary>
        [Test]
        public void SegmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SsmlRequest request = null;
            //string tag = null;
            //var response = instance.Segment(request, tag);
            //Assert.IsInstanceOf<List<SsmlElement>> (response, "response is List<SsmlElement>");
        }
        
        /// <summary>
        /// Test SegmentAndBuild
        /// </summary>
        [Test]
        public void SegmentAndBuildTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SsmlRequest request = null;
            //string tag = null;
            //var response = instance.SegmentAndBuild(request, tag);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test SegmentAndBuild_0
        /// </summary>
        [Test]
        public void SegmentAndBuild_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SsmlRequest request = null;
            //List<string> tags = null;
            //var response = instance.SegmentAndBuild_0(request, tags);
            //Assert.IsInstanceOf<List<string>> (response, "response is List<string>");
        }
        
        /// <summary>
        /// Test SsmlToSpeech
        /// </summary>
        [Test]
        public void SsmlToSpeechTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string assistant = null;
            //SsmlRequest request = null;
            //var response = instance.SsmlToSpeech(assistant, request);
            //Assert.IsInstanceOf<List<SpeechOutput>> (response, "response is List<SpeechOutput>");
        }
        
        /// <summary>
        /// Test ValidateAlexaSsml
        /// </summary>
        [Test]
        public void ValidateAlexaSsmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SsmlRequest request = null;
            //var response = instance.ValidateAlexaSsml(request);
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        
        /// <summary>
        /// Test ValidateGoogleSsml
        /// </summary>
        [Test]
        public void ValidateGoogleSsmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SsmlRequest request = null;
            //var response = instance.ValidateGoogleSsml(request);
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        
        /// <summary>
        /// Test ValidateSsml
        /// </summary>
        [Test]
        public void ValidateSsmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SsmlRequest request = null;
            //var response = instance.ValidateSsml(request);
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        
    }

}
