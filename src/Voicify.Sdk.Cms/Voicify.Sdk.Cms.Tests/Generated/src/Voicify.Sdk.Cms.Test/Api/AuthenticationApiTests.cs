/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing AuthenticationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AuthenticationApiTests
    {
        private AuthenticationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AuthenticationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AuthenticationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AuthenticationApi
            //Assert.IsInstanceOfType(typeof(AuthenticationApi), instance, "instance is a AuthenticationApi");
        }

        
        /// <summary>
        /// Test Authenticate
        /// </summary>
        [Test]
        public void AuthenticateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string clientId = null;
            //string clientSecret = null;
            //string grantType = null;
            //string username = null;
            //string password = null;
            //string refreshToken = null;
            //var response = instance.Authenticate(clientId, clientSecret, grantType, username, password, refreshToken);
            //Assert.IsInstanceOf<AuthenticationResponse> (response, "response is AuthenticationResponse");
        }
        
        /// <summary>
        /// Test TestAdminAuth
        /// </summary>
        [Test]
        public void TestAdminAuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.TestAdminAuth();
            
        }
        
        /// <summary>
        /// Test TestAuth
        /// </summary>
        [Test]
        public void TestAuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.TestAuth();
            
        }
        
    }

}
