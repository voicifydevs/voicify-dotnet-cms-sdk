/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing OrganizationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OrganizationApiTests
    {
        private OrganizationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new OrganizationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OrganizationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' OrganizationApi
            //Assert.IsInstanceOfType(typeof(OrganizationApi), instance, "instance is a OrganizationApi");
        }

        
        /// <summary>
        /// Test CreateOrganization
        /// </summary>
        [Test]
        public void CreateOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewOrganizationRequest model = null;
            //var response = instance.CreateOrganization(model);
            //Assert.IsInstanceOf<OrganizationModel> (response, "response is OrganizationModel");
        }
        
        /// <summary>
        /// Test GetDetailedMemberships
        /// </summary>
        [Test]
        public void GetDetailedMembershipsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //var response = instance.GetDetailedMemberships(organizationId);
            //Assert.IsInstanceOf<List<MembershipModel>> (response, "response is List<MembershipModel>");
        }
        
        /// <summary>
        /// Test GetForUser
        /// </summary>
        [Test]
        public void GetForUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetForUser();
            //Assert.IsInstanceOf<List<OrganizationModel>> (response, "response is List<OrganizationModel>");
        }
        
        /// <summary>
        /// Test GetMembers
        /// </summary>
        [Test]
        public void GetMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //var response = instance.GetMembers(organizationId);
            //Assert.IsInstanceOf<List<OrganizationMemberModel>> (response, "response is List<OrganizationMemberModel>");
        }
        
        /// <summary>
        /// Test LeaveOrganization
        /// </summary>
        [Test]
        public void LeaveOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //var response = instance.LeaveOrganization(organizationId);
            //Assert.IsInstanceOf<OrganizationMemberModel> (response, "response is OrganizationMemberModel");
        }
        
        /// <summary>
        /// Test RegenerateOrganizationSecret
        /// </summary>
        [Test]
        public void RegenerateOrganizationSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //var response = instance.RegenerateOrganizationSecret(organizationId);
            //Assert.IsInstanceOf<OrganizationModel> (response, "response is OrganizationModel");
        }
        
        /// <summary>
        /// Test RemoveMember
        /// </summary>
        [Test]
        public void RemoveMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationMemberId = null;
            //var response = instance.RemoveMember(organizationMemberId);
            //Assert.IsInstanceOf<OrganizationMemberModel> (response, "response is OrganizationMemberModel");
        }
        
        /// <summary>
        /// Test UpdateDetails
        /// </summary>
        [Test]
        public void UpdateDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //UpdateOrganizationRequest model = null;
            //var response = instance.UpdateDetails(organizationId, model);
            //Assert.IsInstanceOf<OrganizationModel> (response, "response is OrganizationModel");
        }
        
        /// <summary>
        /// Test UpdateMemberRole
        /// </summary>
        [Test]
        public void UpdateMemberRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationMemberId = null;
            //MemberRoleUpdateRequest model = null;
            //var response = instance.UpdateMemberRole(organizationMemberId, model);
            //Assert.IsInstanceOf<OrganizationMemberModel> (response, "response is OrganizationMemberModel");
        }
        
    }

}
