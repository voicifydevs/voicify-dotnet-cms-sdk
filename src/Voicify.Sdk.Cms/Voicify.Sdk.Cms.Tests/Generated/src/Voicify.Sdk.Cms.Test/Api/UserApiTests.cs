/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing UserApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UserApiTests
    {
        private UserApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UserApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UserApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UserApi
            //Assert.IsInstanceOfType(typeof(UserApi), instance, "instance is a UserApi");
        }

        
        /// <summary>
        /// Test ChangePassword
        /// </summary>
        [Test]
        public void ChangePasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangePasswordRequest model = null;
            //instance.ChangePassword(model);
            
        }
        
        /// <summary>
        /// Test CreateApiUser
        /// </summary>
        [Test]
        public void CreateApiUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewApiUserRequest model = null;
            //var response = instance.CreateApiUser(model);
            //Assert.IsInstanceOf<ApiUserModel> (response, "response is ApiUserModel");
        }
        
        /// <summary>
        /// Test CreateUser
        /// </summary>
        [Test]
        public void CreateUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewUserRequest model = null;
            //var response = instance.CreateUser(model);
            //Assert.IsInstanceOf<UserModel> (response, "response is UserModel");
        }
        
        /// <summary>
        /// Test GetCurrentUserData
        /// </summary>
        [Test]
        public void GetCurrentUserDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCurrentUserData();
            //Assert.IsInstanceOf<UserModel> (response, "response is UserModel");
        }
        
        /// <summary>
        /// Test GetCurrentUserTermsAgreement
        /// </summary>
        [Test]
        public void GetCurrentUserTermsAgreementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCurrentUserTermsAgreement();
            //Assert.IsInstanceOf<UserTermAgreementModel> (response, "response is UserTermAgreementModel");
        }
        
        /// <summary>
        /// Test GetSingleSignOnAvailability
        /// </summary>
        [Test]
        public void GetSingleSignOnAvailabilityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //var response = instance.GetSingleSignOnAvailability(email);
            //Assert.IsInstanceOf<bool?> (response, "response is bool?");
        }
        
        /// <summary>
        /// Test GetSystemUserRoles
        /// </summary>
        [Test]
        public void GetSystemUserRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetSystemUserRoles();
            //Assert.IsInstanceOf<List<UserRoleModel>> (response, "response is List<UserRoleModel>");
        }
        
        /// <summary>
        /// Test RequestPasswordReset
        /// </summary>
        [Test]
        public void RequestPasswordResetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ResetRequest model = null;
            //var response = instance.RequestPasswordReset(model);
            //Assert.IsInstanceOf<PasswordResetModel> (response, "response is PasswordResetModel");
        }
        
        /// <summary>
        /// Test SetPassword
        /// </summary>
        [Test]
        public void SetPasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateNewPasswordRequest model = null;
            //instance.SetPassword(model);
            
        }
        
        /// <summary>
        /// Test UpdateDetails
        /// </summary>
        [Test]
        public void UpdateDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateUserRequest model = null;
            //instance.UpdateDetails(model);
            
        }
        
        /// <summary>
        /// Test UpdateProfileImage
        /// </summary>
        [Test]
        public void UpdateProfileImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream _file = null;
            //var response = instance.UpdateProfileImage(_file);
            //Assert.IsInstanceOf<UserModel> (response, "response is UserModel");
        }
        
    }

}
