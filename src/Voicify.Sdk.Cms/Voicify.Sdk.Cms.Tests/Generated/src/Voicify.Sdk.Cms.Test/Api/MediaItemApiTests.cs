/* 
 * Voicify CMS API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: V1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Voicify.Sdk.Cms.Client;
using Voicify.Sdk.Cms.Api;
using Voicify.Sdk.Core.Models.Model;

namespace Voicify.Sdk.Cms.Test
{
    /// <summary>
    ///  Class for testing MediaItemApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MediaItemApiTests
    {
        private MediaItemApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MediaItemApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MediaItemApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MediaItemApi
            //Assert.IsInstanceOfType(typeof(MediaItemApi), instance, "instance is a MediaItemApi");
        }

        
        /// <summary>
        /// Test ConvertToSsml
        /// </summary>
        [Test]
        public void ConvertToSsmlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mediaItemId = null;
            //var response = instance.ConvertToSsml(mediaItemId);
            //Assert.IsInstanceOf<MediaItemModel> (response, "response is MediaItemModel");
        }
        
        /// <summary>
        /// Test CreateMediaItem
        /// </summary>
        [Test]
        public void CreateMediaItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string name = null;
            //System.IO.Stream _file = null;
            //var response = instance.CreateMediaItem(applicationId, name, _file);
            //Assert.IsInstanceOf<MediaItemModel> (response, "response is MediaItemModel");
        }
        
        /// <summary>
        /// Test CreateMediaItem_0
        /// </summary>
        [Test]
        public void CreateMediaItem_0Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //NewMediaItemRequest model = null;
            //var response = instance.CreateMediaItem_0(applicationId, model);
            //Assert.IsInstanceOf<MediaItemModel> (response, "response is MediaItemModel");
        }
        
        /// <summary>
        /// Test DeleteMediaItem
        /// </summary>
        [Test]
        public void DeleteMediaItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mediaItemId = null;
            //var response = instance.DeleteMediaItem(mediaItemId);
            //Assert.IsInstanceOf<MediaItemModel> (response, "response is MediaItemModel");
        }
        
        /// <summary>
        /// Test DisableMediaItem
        /// </summary>
        [Test]
        public void DisableMediaItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mediaItemId = null;
            //var response = instance.DisableMediaItem(mediaItemId);
            //Assert.IsInstanceOf<MediaItemModel> (response, "response is MediaItemModel");
        }
        
        /// <summary>
        /// Test GetDisabledMediaItemsForApplication
        /// </summary>
        [Test]
        public void GetDisabledMediaItemsForApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //var response = instance.GetDisabledMediaItemsForApplication(applicationId);
            //Assert.IsInstanceOf<List<MediaItemModel>> (response, "response is List<MediaItemModel>");
        }
        
        /// <summary>
        /// Test GetMediaItemsForApplication
        /// </summary>
        [Test]
        public void GetMediaItemsForApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //var response = instance.GetMediaItemsForApplication(applicationId);
            //Assert.IsInstanceOf<List<MediaItemModel>> (response, "response is List<MediaItemModel>");
        }
        
        /// <summary>
        /// Test GetOrganizationUploadUrl
        /// </summary>
        [Test]
        public void GetOrganizationUploadUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string organizationId = null;
            //string name = null;
            //string fileName = null;
            //var response = instance.GetOrganizationUploadUrl(organizationId, name, fileName);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetUploadUrl
        /// </summary>
        [Test]
        public void GetUploadUrlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationId = null;
            //string name = null;
            //string fileName = null;
            //var response = instance.GetUploadUrl(applicationId, name, fileName);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test UpdateMediaItem
        /// </summary>
        [Test]
        public void UpdateMediaItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string mediaItemId = null;
            //UpdateMediaItemRequest request = null;
            //var response = instance.UpdateMediaItem(mediaItemId, request);
            //Assert.IsInstanceOf<MediaItemModel> (response, "response is MediaItemModel");
        }
        
    }

}
